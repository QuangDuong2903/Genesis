server:
  port: 8020
  servlet:
    context-path: /order

spring:
  application:
    name: order-service
  datasource:
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/order_service
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  rabbitmq:
    host: ${RABBITMQ_HOST}
    port: ${RABBITMQ_PORT}
    username: ${RABBITMQ_USERNAME}
    password: ${RABBITMQ_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        format_sql: true
    show-sql: true
    open-in-view: false
  sql:
    init:
      mode: never
  profiles:
    active: dev
  config:
    import: vault://
  cloud:
    consul:
      host: ${CONSUL_HOST}
      port: ${CONSUL_PORT}
      discovery:
        instance-id: ${spring.application.name}:${random.value}
        health-check-path: ${server.servlet.context-path}/actuator/health
        health-check-interval: 30s
        acl-token: ${CONSUL_TOKEN}
        fail-fast: false
        prefer-ip-address: true
    vault:
      kv:
        enabled: true
        default-context: ${spring.application.name}
        backend: genesis
      authentication: token
      token: hvs.SxOv3K9RpSR0Xja8fr10FCUa
      scheme: http
      host: localhost
      port: 8200
    function:
      definition: handleReduceQuantityReply;handleDebitBalanceReply;handleCompensateQuantityReply
    stream:
      bindings:
        handleReduceQuantityReply-in-0:
          destination: reduce-quantity-reply-topic
        handleDebitBalanceReply-in-0:
          destination: debit-balance-reply-topic
        handleCompensateQuantityReply-in-0:
          destination: compensate-quantity-reply-topic

management:
  endpoints:
    web:
      exposure:
        include: "*"
