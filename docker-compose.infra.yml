version: '3.8'

name: genesis-infra

services:
  genesis-infra-prometheus:
    container_name: genesis-infra-prometheus
    image: prom/prometheus:v2.48.1
    restart: always
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus:/prometheus
    ports:
      - "9090:9090"
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    networks:
      - genesis-network

  genesis-infra-grafana:
    container_name: genesis-infra-grafana
    image: grafana/grafana:10.2.2
    restart: always
    ports:
      - "3000:3000"
    networks:
      - genesis-network

  genesis-infra-consul:
    image: hashicorp/consul:1.14
    container_name: genesis-infra-consul
    restart: always
    ports:
      - "8500:8500"
      - "8600:8600/tcp"
      - "8600:8600/udp"
    volumes:
      - consul:/consul/data
      - ./docker/consul/acl.json:/consul/config/acl.json
    command: "agent -server -ui -node=server-1 -bootstrap-expect=1 -client=0.0.0.0"
    networks:
      - genesis-network

  genesis-infra-vault:
    image: hashicorp/vault:1.15
    container_name: genesis-infra-vault
    hostname: vault
    restart: always
    ports:
      - "8200:8200"
    environment:
      VAULT_ADDR: "http://0.0.0.0:8200"
      VAULT_API_ADDR: "http://0.0.0.0:8200"
      VAULT_LOCAL_CONFIG: '{"storage": {"file": {"path": "/vault/file"}}, "listener": [{"tcp": { "address": "0.0.0.0:8200", "tls_disable": true}}], "default_lease_ttl": "168h", "max_lease_ttl": "720h", "ui": true}'
    cap_add:
      - IPC_LOCK
    volumes:
      - vault-file:/vault/file
      - vault-log:/vault/log
      - vault-logs:/vault/logs
    command: "server"
    networks:
      - genesis-network

  genesis-infra-zipkin:
    container_name: genesis-infra-zipkin
    image: openzipkin/zipkin:3
    restart: unless-stopped
    ports:
      - "9411:9411"
    networks:
      - genesis-network

  genesis-infra-elasticsearch:
    container_name: genesis-infra-elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.4
    restart: unless-stopped
    environment:
      node.name: es-node
      cluster.name: docker-cluster
      discovery.type: single-node
      bootstrap.memory_lock: true
      ES_JAVA_OPTS: -Xms1g -Xmx1g
      xpack.license.self_generated.type: basic
      xpack.security.enabled: true
      ELASTIC_PASSWORD: genesis
    ports:
      - "9200:9200"
      - "9300:9300"
    healthcheck:
      interval: 30s
      retries: 10
      test: [ "CMD-SHELL", "curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null --user elastic:genesis http://localhost:9200" ]
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - genesis-network

  genesis-infra-kibana:
    container_name: genesis-infra-kibana
    image: docker.elastic.co/kibana/kibana:8.10.4
    restart: unless-stopped
    volumes:
      - ./docker/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
    ports:
      - "5601:5601"
    command: >
      bash -c "curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null --user elastic:genesis http://genesis-infra-elasticsearch:9200/_security/user/kibana_system/_password -H 'Content-Type: application/json' -d '{\"password\": \"genesis\"}' && /usr/local/bin/kibana-docker"
    depends_on:
      genesis-infra-elasticsearch:
        condition: service_healthy
    networks:
      - genesis-network

  genesis-infra-logstash:
    container_name: genesis-infra-logstash
    image: docker.elastic.co/logstash/logstash:8.10.4
    restart: unless-stopped
    volumes:
      - ./docker/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./docker/logstash/config/pipelines.yml:/usr/share/logstash/config/pipelines.yml
      - ./docker/logstash/pipeline/:/usr/share/logstash/pipeline/
    ports:
      - "5044:5044"
    environment:
      LS_JAVA_OPTS: -Xmx256m -Xms256m
    depends_on:
      genesis-infra-elasticsearch:
        condition: service_healthy
    networks:
      - genesis-network

  genesis-infra-filebeat:
    container_name: genesis-infra-filebeat
    image: docker.elastic.co/beats/filebeat:8.10.4
    restart: unless-stopped
    command: filebeat -e -strict.perms=false
    volumes:
      - ./docker/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - E:\logs:/logs
    depends_on:
      genesis-infra-logstash:
        condition: service_started
    networks:
      - genesis-network

volumes:
  prometheus:
    driver: local
  consul:
    driver: local
  vault-file:
    driver: local
  vault-log:
    driver: local
  vault-logs:
    driver: local
  elasticsearch-data:
    driver: local

networks:
  genesis-network:
    external: true
